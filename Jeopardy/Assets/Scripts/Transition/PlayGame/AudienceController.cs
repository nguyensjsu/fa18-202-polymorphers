using System.Collections;using System.Collections.Generic;using Model;using UnityEngine;using UnityEngine.EventSystems;using UnityEngine.UI;public class AudienceController : MonoBehaviour {    private Text redText;    private Text blueText;    private GameObject qaAudienceObject;    private GameObject jeopardyObject;    private GameObject doubleJeopardyObject;    private GameObject finalJeopardyObject;    public GameObject daily;    public GameObject displayPanel;        int totalTime;    // Use this for initialization    void Start () {        redText = GameObject.Find("Team1Score").GetComponent<Text>();        blueText = GameObject.Find("Team2Score").GetComponent<Text>();        jeopardyObject = GameObject.Find("AudienceJeopardyPanel");        doubleJeopardyObject = GameObject.Find("AudienceDoubleJeopardyPanel");        finalJeopardyObject = GameObject.Find("AudienceFinalJeopardyPanel");        qaAudienceObject = GameObject.Find("QAGameAudienceScreen");        Transform temp_transform = jeopardyObject.GetComponent<Transform>();        temp_transform.position = new Vector3(0f, temp_transform.position.y, temp_transform.position.z);        temp_transform = finalJeopardyObject.GetComponent<Transform>();        temp_transform.position = new Vector3(0f, temp_transform.position.y, temp_transform.position.z);        temp_transform = doubleJeopardyObject.GetComponent<Transform>();        temp_transform.position = new Vector3(0f, temp_transform.position.y, temp_transform.position.z);        temp_transform = qaAudienceObject.GetComponent<Transform>();        temp_transform.position = new Vector3(0f, 1024, temp_transform.position.z);        ShowAllCategory();        jeopardyObject.SetActive(true);        doubleJeopardyObject.SetActive(false);        finalJeopardyObject.SetActive(false);        qaAudienceObject.SetActive(false);    }

    private void ShowAllCategory()    {        int count = GameData.Category.Count;        for (int i = 0; i < count; i++)        {            GameObject.Find("AudienceCategory" + i.ToString()).GetComponentInChildren<Text>().text = GameData.Category[i].Category;        }        count = GameData.DoubleCategory.Count;        for (int i = 0; i < count; i++)        {            GameObject.Find("AudienceCategoryD" + i.ToString()).GetComponentInChildren<Text>().text = GameData.DoubleCategory[i].Category;        }        GameObject.Find("AudienceCategoryF0").GetComponentInChildren<Text>().text = GameData.FinalCategory.Category;    }    public void UpdateAudienceData()    {        GameObject.Find("Team1Text").GetComponent<Text>().text = AudienceData.GetInstance().GetRedTeamName();        GameObject.Find("Team2Text").GetComponent<Text>().text = AudienceData.GetInstance().GetBlueTeamName();        redText.text = AudienceData.GetInstance().GetRedScore().ToString();        blueText.text = AudienceData.GetInstance().GetBlueScore().ToString();    }    public void changeRedTeamName(string name)    {        GameObject.Find("Team1Text").GetComponent<Text>().text = name;    }    public void changeBlueTeamName(string name)    {        GameObject.Find("Team2Text").GetComponent<Text>().text = name;    }    public void SetAudienceTime(string time)    {        if(GameObject.Find("AudienceClockText") != null){            GameObject.Find("AudienceClockText").GetComponent<Text>().text = time;        }        else{            Debug.Log("AudienceClockText is null");        }           }    public void dispearButton(string index)    {        string str = "AudienceButton" + index;        GameObject.Find(str).SetActive(false);    }    public void changePanel(string panel)    {        if(panel == "Jeoparydy")        {            jeopardyObject.SetActive(true);            doubleJeopardyObject.SetActive(false);            finalJeopardyObject.SetActive(false);        }        else if(panel == "DoubleJeopardy")        {            jeopardyObject.SetActive(false);            doubleJeopardyObject.SetActive(true);            finalJeopardyObject.SetActive(false);        }        else if(panel == "FinalJeopardy")        {            jeopardyObject.SetActive(false);            doubleJeopardyObject.SetActive(false);            finalJeopardyObject.SetActive(true);        }else if(panel == "Question")        {            qaAudienceObject.SetActive(true);        }else if (panel == "DailyDouble")        {            daily.SetActive(true);            totalTime = 5;            StartCoroutine(CountDown());        }        else  //ExitQuestion        {            qaAudienceObject.SetActive(false);        }    }    IEnumerator CountDown()    {        yield return new WaitForSeconds(totalTime);        daily.SetActive(false);    }}